"use strict";(()=>{var e={};e.id=232,e.ids=[232],e.modules={38013:e=>{e.exports=require("mongodb")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},80518:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>v,patchFetch:()=>f,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>m,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{GET:()=>p});var n=t(73278),i=t(45002),s=t(54877),a=t(71309),u=t(83196);async function p(e,{params:r}){let t=r.publicUrl;try{let e=(await u.Z).db(process.env.DATABASE_NAME).collection(process.env.COLLECTION_NAME),r=await e.findOne({publicUrl:t},{projection:{_id:0,name:1,email:1,image:1}});if(!r)return a.NextResponse.json({error:"User not found"},{status:404});return a.NextResponse.json({user:r},{status:200})}catch(e){return console.error("Error fetching user information:",e),a.NextResponse.json({error:"Internal Server Error"},{status:500})}}let l=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/user-info/[publicUrl]/route",pathname:"/api/user-info/[publicUrl]",filename:"route",bundlePath:"app/api/user-info/[publicUrl]/route"},resolvedPagePath:"/home/matth/Projects/GratitudeVault3/app/api/user-info/[publicUrl]/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:m}=l,v="/api/user-info/[publicUrl]/route";function f(){return(0,s.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:d})}},83196:(e,r,t)=>{t.d(r,{Z:()=>i});var o=t(38013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let n=process.env.MONGODB_URI,i=new o.MongoClient(n,{}).connect()}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[787,833],()=>t(80518));module.exports=o})();