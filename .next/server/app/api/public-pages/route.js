"use strict";(()=>{var e={};e.id=136,e.ids=[136],e.modules={38013:e=>{e.exports=require("mongodb")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},85044:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>m,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>v,staticGenerationAsyncStorage:()=>d});var o={};t.r(o),t.d(o,{GET:()=>u});var n=t(73278),a=t(45002),i=t(54877),s=t(71309),p=t(83196);async function u(e){try{let e=(await p.Z).db(process.env.DATABASE_NAME).collection(process.env.COLLECTION_NAME),r=(await e.find({},{projection:{_id:0,publicUrl:1}}).toArray()).map(e=>e.publicUrl);return console.log("api public_urls",r),s.NextResponse.json({publicUrls:r},{status:200})}catch(e){return console.error("Error fetching user information:",e),s.NextResponse.json({error:"Internal Server Error"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/public-pages/route",pathname:"/api/public-pages",filename:"route",bundlePath:"app/api/public-pages/route"},resolvedPagePath:"/home/matth/Projects/GratitudeVault3/app/api/public-pages/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:v}=c,g="/api/public-pages/route";function m(){return(0,i.patchFetch)({serverHooks:v,staticGenerationAsyncStorage:d})}},83196:(e,r,t)=>{t.d(r,{Z:()=>a});var o=t(38013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let n=process.env.MONGODB_URI,a=new o.MongoClient(n,{}).connect()}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[787,833],()=>t(85044));module.exports=o})();